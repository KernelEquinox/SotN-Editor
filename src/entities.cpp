#include "entities.h"
#include "common.h"
#include <map>



/**
 * Populates the entity's data map from the entity's data for ease of printing.
 */
void Entity::PopulateDataMap() {
    int offset = 0;
    data_vec.push_back({offset, "pos_x_sub", data.pos_x_sub});
    offset += sizeof(data.pos_x_sub);
    data_vec.push_back({offset, "pos_x", data.pos_x});
    offset += sizeof(data.pos_x);
    data_vec.push_back({offset, "pos_y_sub", data.pos_y_sub});
    offset += sizeof(data.pos_y_sub);
    data_vec.push_back({offset, "pos_y", data.pos_y});
    offset += sizeof(data.pos_y);
    data_vec.push_back({offset, "acceleration_x", data.acceleration_x});
    offset += sizeof(data.acceleration_x);
    data_vec.push_back({offset, "acceleration_y", data.acceleration_y});
    offset += sizeof(data.acceleration_y);
    data_vec.push_back({offset, "hitbox_offset_x", data.hitbox_offset_x});
    offset += sizeof(data.hitbox_offset_x);
    data_vec.push_back({offset, "hitbox_offset_y", data.hitbox_offset_y});
    offset += sizeof(data.hitbox_offset_y);
    data_vec.push_back({offset, "facing", data.facing});
    offset += sizeof(data.facing);
    data_vec.push_back({offset, "clut_index", data.clut_index});
    offset += sizeof(data.clut_index);
    data_vec.push_back({offset, "blend_mode", data.blend_mode});
    offset += sizeof(data.blend_mode);
    data_vec.push_back({offset, "transform_flags", data.transform_flags});
    offset += sizeof(data.transform_flags);
    data_vec.push_back({offset, "scale_x", data.scale_x});
    offset += sizeof(data.scale_x);
    data_vec.push_back({offset, "scale_y", data.scale_y});
    offset += sizeof(data.scale_y);
    data_vec.push_back({offset, "rotation", data.rotation});
    offset += sizeof(data.rotation);
    data_vec.push_back({offset, "translate_x", data.translate_x});
    offset += sizeof(data.translate_x);
    data_vec.push_back({offset, "translate_y", data.translate_y});
    offset += sizeof(data.translate_y);
    data_vec.push_back({offset, "z_depth", data.z_depth});
    offset += sizeof(data.z_depth);
    data_vec.push_back({offset, "object_id", data.object_id});
    offset += sizeof(data.object_id);
    data_vec.push_back({offset, "update_function", data.update_function});
    offset += sizeof(data.update_function);
    data_vec.push_back({offset, "current_state", data.current_state});
    offset += sizeof(data.current_state);
    data_vec.push_back({offset, "current_substate", data.current_substate});
    offset += sizeof(data.current_substate);
    data_vec.push_back({offset, "initial_state", data.initial_state});
    offset += sizeof(data.initial_state);
    data_vec.push_back({offset, "room_slot", data.room_slot});
    offset += sizeof(data.room_slot);
    data_vec.push_back({offset, "unk34", data.unk34});
    offset += sizeof(data.unk34);
    data_vec.push_back({offset, "unk38", data.unk38});
    offset += sizeof(data.unk38);
    data_vec.push_back({offset, "info_idx", data.info_idx});
    offset += sizeof(data.info_idx);
    data_vec.push_back({offset, "hitbox_type", data.hitbox_type});
    offset += sizeof(data.hitbox_type);
    data_vec.push_back({offset, "hit_points", data.hit_points});
    offset += sizeof(data.hit_points);
    data_vec.push_back({offset, "attack_damage", data.attack_damage});
    offset += sizeof(data.attack_damage);
    data_vec.push_back({offset, "damage_type", data.damage_type});
    offset += sizeof(data.damage_type);
    data_vec.push_back({offset, "unk44", data.unk44});
    offset += sizeof(data.unk44);
    data_vec.push_back({offset, "hitbox_width", data.hitbox_width});
    offset += sizeof(data.hitbox_width);
    data_vec.push_back({offset, "hitbox_height", data.hitbox_height});
    offset += sizeof(data.hitbox_height);
    data_vec.push_back({offset, "unk48", data.unk48});
    offset += sizeof(data.unk48);
    data_vec.push_back({offset, "unk49", data.unk49});
    offset += sizeof(data.unk49);
    data_vec.push_back({offset, "unk4A", data.unk4A});
    offset += sizeof(data.unk4A);
    data_vec.push_back({offset, "unk4C", data.unk4C});
    offset += sizeof(data.unk4C);
    data_vec.push_back({offset, "frame_index", data.frame_index});
    offset += sizeof(data.frame_index);
    data_vec.push_back({offset, "frame_duration", data.frame_duration});
    offset += sizeof(data.frame_duration);
    data_vec.push_back({offset, "sprite_bank", data.sprite_bank});
    offset += sizeof(data.sprite_bank);
    data_vec.push_back({offset, "sprite_image", data.sprite_image});
    offset += sizeof(data.sprite_image);
    data_vec.push_back({offset, "unk58", data.unk58});
    offset += sizeof(data.unk58);
    data_vec.push_back({offset, "tileset", data.tileset});
    offset += sizeof(data.tileset);
    data_vec.push_back({offset, "segment_root", data.segment_root});
    offset += sizeof(data.segment_root);
    data_vec.push_back({offset, "segment_next", data.segment_next});
    offset += sizeof(data.segment_next);
    data_vec.push_back({offset, "polygon_id", data.polygon_id});
    offset += sizeof(data.polygon_id);
    data_vec.push_back({offset, "unk68", data.unk68});
    offset += sizeof(data.unk68);
    data_vec.push_back({offset, "unk6A", data.unk6A});
    offset += sizeof(data.unk6A);
    data_vec.push_back({offset, "unk6C", data.unk6C});
    offset += sizeof(data.unk6C);
    data_vec.push_back({offset, "unk6D", data.unk6D});
    offset += sizeof(data.unk6D);
    data_vec.push_back({offset, "unk6E", data.unk6E});
    offset += sizeof(data.unk6E);
    data_vec.push_back({offset, "unk70", data.unk70});
    offset += sizeof(data.unk70);
    data_vec.push_back({offset, "unk74", data.unk74});
    offset += sizeof(data.unk74);
    data_vec.push_back({offset, "unk78", data.unk78});
    offset += sizeof(data.unk78);
    data_vec.push_back({offset, "unk7C", data.unk7C});
    offset += sizeof(data.unk7C);
    data_vec.push_back({offset, "unk80", data.unk80});
    offset += sizeof(data.unk80);
    data_vec.push_back({offset, "unk82", data.unk82});
    offset += sizeof(data.unk82);
    data_vec.push_back({offset, "unk84", data.unk84});
    offset += sizeof(data.unk84);
    data_vec.push_back({offset, "unk86", data.unk86});
    offset += sizeof(data.unk86);
    data_vec.push_back({offset, "unk88", data.unk88});
    offset += sizeof(data.unk88);
    data_vec.push_back({offset, "unk8A", data.unk8A});
    offset += sizeof(data.unk8A);
    data_vec.push_back({offset, "unk8C", data.unk8C});
    offset += sizeof(data.unk8C);
    data_vec.push_back({offset, "unk8E", data.unk8E});
    offset += sizeof(data.unk8E);
    data_vec.push_back({offset, "unk90", data.unk90});
    offset += sizeof(data.unk90);
    data_vec.push_back({offset, "unk94", data.unk94});
    offset += sizeof(data.unk94);
    data_vec.push_back({offset, "unk98", data.unk98});
    offset += sizeof(data.unk98);
    data_vec.push_back({offset, "unk9C", data.unk9C});
    offset += sizeof(data.unk9C);
    data_vec.push_back({offset, "unk9E", data.unk9E});
    offset += sizeof(data.unk9E);
    data_vec.push_back({offset, "unkA0", data.unkA0});
    offset += sizeof(data.unkA0);
    data_vec.push_back({offset, "unkA2", data.unkA2});
    offset += sizeof(data.unkA2);
    data_vec.push_back({offset, "unkA4", data.unkA4});
    offset += sizeof(data.unkA4);
    data_vec.push_back({offset, "unkA8", data.unkA8});
    offset += sizeof(data.unkA8);
    data_vec.push_back({offset, "unkAC", data.unkAC});
    offset += sizeof(data.unkAC);
    data_vec.push_back({offset, "unkB0", data.unkB0});
    offset += sizeof(data.unkB0);
    data_vec.push_back({offset, "pickup_flag", data.pickup_flag});
    offset += sizeof(data.pickup_flag);
    data_vec.push_back({offset, "unkB6", data.unkB6});
    offset += sizeof(data.unkB6);
    data_vec.push_back({offset, "callback", data.callback});
}
